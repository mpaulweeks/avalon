{"version":3,"sources":["Storage.ts","WebSocketView.tsx","ViewDebug.tsx","ViewVote.tsx","Role.ts","ViewGame.tsx","ViewLobby.tsx","ViewReset.tsx","ViewHub.tsx","index.tsx"],"names":["randomId","length","Math","floor","random","pow","toString","padStart","BrowserStorage","data","this","store","setItem","JSON","stringify","stored","getItem","defaultState","id","set","parse","window","localStorage","baseDomain","location","href","includes","baseDomainPing","slice","WebSocketView","props","get","hasReceived","ws","WebSocket","path","console","log","onmessage","event","onReceive","onopen","onOpen","close","setState","send","React","Component","ViewDebug","state","rss","heapTotal","heapUsed","external","Object","keys","map","key","ViewVote","showResults","votes","game","newData","message","onClick","voteSuccess","voteFail","voteClear","toggleReveal","Roles","reduce","obj","r","redsMinusMordred","BasicRed","Assassin","Morgana","redsPlusMordred","concat","Mordred","RoleData","BasicBlue","isRed","name","sees","Merlin","Percival","ViewGame","host","isHost","undefined","roles","players","current","hostName","storage","me","myData","role","youSee","filter","o","values","join","ViewLobby","tempName","tempJoin","createGame","value","onChange","target","joinGame","setName","ViewReset","reset","ViewHub","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdafe2fc.chunk.js","sourcesContent":["export interface StorageLayer {\n  getItem(key: string): string | null;\n  setItem(key: string, value: string): void;\n}\n\nexport function randomId(length: number) {\n  return Math.floor(Math.random() * Math.pow(10, length)).toString().padStart(length, '0');\n}\n\nexport interface UserState {\n  id: string;\n  name?: string;\n  game?: string;\n}\n\nexport class BrowserStorage {\n  static store: StorageLayer = window.localStorage;\n\n  static set(data: UserState) {\n    this.store.setItem('state', JSON.stringify(data));\n  }\n  static get(): UserState {\n    const stored = this.store.getItem('state');\n    if (!stored) {\n      const defaultState = {\n        id: randomId(6),\n      };\n      this.set(defaultState);\n      return defaultState;\n    }\n    return JSON.parse(stored) as UserState;\n  }\n}\n","import React from 'react';\nimport { BrowserStorage } from './Storage';\n\nexport interface StateBase<Data> {\n  data: Data;\n};\n\nexport const remoteDomain = 'wss://avalon-272401.appspot.com';\nconst useLocal = window.location.href.includes('localhost') && !window.location.href.includes('prod');\nexport const baseDomain = useLocal ? 'ws://localhost:8080' : remoteDomain;\nexport const baseDomainPing = 'http' + baseDomain.slice(2);\n\nexport abstract class WebSocketView<Props, State extends StateBase<Data>, Data> extends React.Component<Props, State> {\n  abstract path(): string;\n\n  id = BrowserStorage.get().id;\n  hasReceived = false;\n\n  ws: WebSocket;\n  constructor(props: Props) {\n    super(props);\n    this.ws = new WebSocket(`${baseDomain}/${this.path()}`);\n    console.log('constructing websocket view for:', this.path());\n  }\n\n  componentDidMount() {\n    this.ws.onmessage = event => {\n      const data = JSON.parse(event.data) as Data;\n      this.onReceive(data);\n    };\n    this.ws.onopen = () => this.onOpen();\n  }\n  componentWillUnmount() {\n    this.ws.close();\n  }\n\n  onOpen() {\n    // default to nothing\n  }\n  onReceive(data: Data) {\n    this.setState({ data: data, });\n  }\n  message(data: Data) {\n    this.ws.send(JSON.stringify(data));\n  }\n}\n","import React from 'react';\n\nimport { WebSocketView, StateBase, baseDomainPing } from './WebSocketView';\n\ninterface Data {\n  rss: string;\n  heapTotal: string;\n  heapUsed: string;\n  external: string;\n}\ntype StateKey = keyof Data;\ninterface Props {}\ninterface State extends StateBase<Data> {}\n\nexport class ViewDebug extends WebSocketView<Props, State, Data> {\n  state = {\n    data: {\n      rss: '?',\n      heapTotal: '?',\n      heapUsed: '?',\n      external: '?',\n    },\n  };\n  path() { return 'memory'; }\n  render() {\n    const { data } = this.state;\n    return (\n      <div>\n        <h1>Debugging Health Info</h1>\n        <p>\n          <a href=\"https://mpaulweeks.github.io/avalon/\">mpaulweeks.github.io/avalon</a>\n        </p>\n        <p>\n          <a href={baseDomainPing}>{baseDomainPing}</a>\n        </p>\n        {Object.keys(data).map(key => (\n          <div key={key}>{key}: {data[key as StateKey]}</div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebSocketView, StateBase } from './WebSocketView';\nimport { BrowserStorage } from './Storage';\n\ninterface Data {\n  showResults: boolean;\n  votes: {\n    [key: string]: string,\n  };\n}\ninterface Props { }\ninterface State extends StateBase<Data> { }\n\nexport class ViewVote extends WebSocketView<Props, State, Data> {\n  state: State = {\n    data: {\n      showResults: false,\n      votes: {},\n    },\n  };\n  path() {\n    return `vote/${BrowserStorage.get().game || 0}`;\n  }\n\n  voteSuccess() {\n    const newData = { ...this.state.data, };\n    newData.votes[this.id] = 'success';\n    this.message(newData);\n  }\n  voteFail() {\n    const newData = { ...this.state.data, };\n    newData.votes[this.id] = 'fail';\n    this.message(newData);\n  }\n  voteClear() {\n    const newData = { ...this.state.data, };\n    newData.votes = {};\n    this.message(newData);\n  }\n  toggleReveal() {\n    const newData = { ...this.state.data, };\n    newData.showResults = !newData.showResults;\n    this.message(newData);\n  }\n\n  render() {\n    const { data } = this.state;\n\n    if (!BrowserStorage.get().game) {\n      return <h3>you must be in a game to vote</h3>;\n    }\n    return (\n      <div>\n        <h1>Vote</h1>\n\n        {data.votes[this.id] ? (\n          <h3> you have voted </h3>\n        ) : (\n            <div>\n              <button onClick={() => this.voteSuccess()}>vote SUCCESS</button>\n              <button onClick={() => this.voteFail()}>vote FAIL</button>\n            </div>\n          )}\n\n        <hr />\n\n        <div>\n          <button onClick={() => this.voteClear()}>clear all votes</button>\n          <button onClick={() => this.toggleReveal()}>{data.showResults ? 'hide' : 'show'} votes</button>\n        </div>\n\n        <hr />\n\n        <h3>results!</h3>\n\n        {data.showResults && Object.keys(data.votes).length ? (\n          <div>\n            {Object.keys(data.votes).map(key => (\n              <div key={key}>\n                {key}: {data.votes[key]}\n              </div>\n            ))}\n          </div>\n        ) : (\n            <p>\n              {Object.keys(data.votes).length} votes counted\n            </p>\n          )}\n      </div>\n    );\n  }\n}\n","\nexport const RoleTypes = [\n  'BasicBlue',\n  'Merlin',\n  'Percival',\n  'BasicRed',\n  'Assassin',\n  'Mordred',\n  'Morgana',\n] as const;\nexport type RoleType = typeof RoleTypes[number];\n\nexport const Roles = RoleTypes.reduce((obj, r) => {\n  obj[r] = r;\n  return obj;\n}, {} as { [key in typeof RoleTypes[number]]: RoleType });\n\nexport interface Role {\n  isRed: boolean;\n  name: string;\n  sees: RoleType[];\n};\n\nconst redsMinusMordred = [Roles.BasicRed, Roles.Assassin, Roles.Morgana];\nconst redsPlusMordred = redsMinusMordred.concat([Roles.Mordred]);\nexport const RoleData: { [key in typeof RoleTypes[number]]: Role } = {\n  BasicBlue: {\n    isRed: false,\n    name: 'Basic Blue',\n    sees: [],\n  },\n  Merlin: {\n    isRed: false,\n    name: 'Merlin',\n    sees: redsMinusMordred,\n  },\n  Percival: {\n    isRed: false,\n    name: 'Percival',\n    sees: [Roles.Merlin, Roles.Morgana],\n  },\n  BasicRed: {\n    isRed: true,\n    name: 'Basic Red',\n    sees: redsPlusMordred,\n  },\n  Assassin: {\n    isRed: true,\n    name: 'Assassin',\n    sees: redsPlusMordred,\n  },\n  Mordred: {\n    isRed: true,\n    name: 'Mordred',\n    sees: redsPlusMordred,\n  },\n  Morgana: {\n    isRed: true,\n    name: 'Morgana',\n    sees: redsPlusMordred,\n  },\n};\n","import React from 'react';\nimport { WebSocketView, StateBase } from './WebSocketView';\nimport { RoleData, RoleType, Roles } from './Role';\nimport { BrowserStorage } from './Storage';\n\ninterface GameData {\n  id: string;\n  host?: string;\n  roles: string[];\n  players: {\n    [key: string]: {\n      id: string;\n      name: string;\n      role?: RoleType;\n    };\n  };\n}\ninterface Props {\n  isHost: boolean;\n  game: string;\n}\ninterface State extends StateBase<GameData> { }\n\nexport class ViewGame extends WebSocketView<Props, State, GameData> {\n  state: State = {\n    data: {\n      id: this.props.game,\n      host: this.props.isHost ? BrowserStorage.get().id : undefined,\n      roles: [],\n      players: {\n        [BrowserStorage.get().id]: {\n          id: BrowserStorage.get().id,\n          name: BrowserStorage.get().name || '???',\n        },\n      },\n    },\n  };\n  path() { return `game/${BrowserStorage.get().game || 0}`; }\n\n  // overrides\n  onOpen() {\n    if (this.props.isHost) {\n      this.message(this.state.data);\n    }\n  }\n  onReceive(data: GameData) {\n    console.log('received:', data);\n    const current = this.state.data;\n    if (!current.host) {\n      // if joining a game, ensure self and broadcast\n      data.players = {\n        ...current.players,\n        ...data.players,\n      };\n      this.message(data);\n    }\n    this.setState({ data: data, });\n  }\n\n  render() {\n    const { data } = this.state;\n    const host = data.host && data.players[data.host];\n    const hostName = host ? host.name : '???';\n\n    const storage = BrowserStorage.get();\n    const me = data.players[storage.id] || {\n      name: storage.name,\n    };\n    const myData = RoleData[me.role || Roles.BasicBlue];\n    const others = Object.keys(data.players).filter(id => id !== storage.id).map(key => data.players[key]);\n    const youSee = others.filter(o => o.role && myData.sees.includes(o.role)).map(o => o.name);\n\n    return (\n      <div>\n        <h1>Game #{data.id}</h1>\n        <div>host: {hostName}</div>\n        <div>players: {Object.values(data.players).map(o => o.id + '/' + o.name).join(', ')}</div>\n\n        {me.role && (\n          <div>\n            <br />\n            <div>you are: {myData.name}</div>\n            <div>you see: {youSee.join(', ')}</div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserStorage, UserState, randomId } from './Storage';\nimport { ViewGame } from './ViewGame';\n\ninterface Props { }\ninterface State {\n  storage: UserState;\n  isHost: boolean;\n  tempName: string;\n  tempJoin: string;\n}\n\nexport class ViewLobby extends React.Component<Props, State> {\n  state: State = {\n    storage: BrowserStorage.get(),\n    isHost: false,\n    tempName: '',\n    tempJoin: '',\n  };\n\n  setName() {\n    BrowserStorage.set({\n      ...BrowserStorage.get(),\n      name: this.state.tempName,\n    });\n    this.setState({ storage: BrowserStorage.get(), });\n  }\n  createGame() {\n    BrowserStorage.set({\n      ...BrowserStorage.get(),\n      game: randomId(3),\n    });\n    this.setState({\n      storage: BrowserStorage.get(),\n      isHost: true,\n    });\n  }\n  joinGame() {\n    BrowserStorage.set({\n      ...BrowserStorage.get(),\n      game: this.state.tempJoin,\n    });\n    this.setState({ storage: BrowserStorage.get(), });\n  }\n\n  render() {\n    const { storage, isHost, tempName, tempJoin } = this.state;\n\n    if (storage.game) {\n      return <ViewGame isHost={isHost} game={storage.game} />\n    }\n\n    if (!storage.name) {\n      return (\n        <div>\n          <h1>Enter your name</h1>\n          <input value={tempName} onChange={event => this.setState({ tempName: event.target.value, })} />\n          <button onClick={() => this.setName()}>confirm</button>\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <h1>Find a Game</h1>\n\n        <div>\n          <button onClick={() => this.createGame()}>create game</button>\n        </div>\n\n        <hr />\n\n        <div>\n          <input value={tempJoin} onChange={event => this.setState({ tempJoin: event.target.value, })} />\n          <button onClick={() => this.joinGame()}>join game</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserStorage, randomId, UserState } from './Storage';\n\ninterface Props { }\ninterface State {\n  storage: UserState,\n}\n\nexport class ViewReset extends React.Component<Props, State> {\n  state: State = {\n    storage: BrowserStorage.get(),\n  };\n  reset() {\n    BrowserStorage.set({\n      id: randomId(6),\n      name: undefined,\n      game: undefined,\n    });\n    this.setState({ storage: BrowserStorage.get(), });\n  }\n  render() {\n    const { id, name, game } = this.state.storage;\n    return (\n      <div>\n        <h1>Current Local State</h1>\n        <h3>id: {id}</h3>\n        <h3>name: {name}</h3>\n        <h3>game: {game}</h3>\n        <div>\n          <button onClick={() => this.reset()}>reset everything</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { ViewDebug } from \"./ViewDebug\";\nimport { ViewVote } from \"./ViewVote\";\nimport { ViewLobby } from \"./ViewLobby\";\nimport { ViewReset } from \"./ViewReset\";\n\nexport class ViewHub extends React.Component {\n  componentDidMount() {\n    // todo store persistant unique id in localStorage\n  }\n  render() {\n    return (\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Game</Link>\n              </li>\n              <li>\n                <Link to=\"/vote\">Vote</Link>\n              </li>\n              <li>\n                <Link to=\"/reset\">Reset</Link>\n              </li>\n              <li>\n                <Link to=\"/debug\">Debug</Link>\n              </li>\n            </ul>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/vote\">\n              <ViewVote />\n            </Route>\n            <Route path=\"/reset\">\n              <ViewReset />\n            </Route>\n            <Route path=\"/debug\">\n              <ViewDebug />\n            </Route>\n            <Route path=\"/\">\n              <ViewLobby />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ViewHub } from './ViewHub';\n\nReactDOM.render(\n  <ViewHub/ >,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}